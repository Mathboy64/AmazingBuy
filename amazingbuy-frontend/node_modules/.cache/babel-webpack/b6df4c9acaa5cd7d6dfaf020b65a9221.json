{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/chmic/Desktop/cogent/day27/Angular/angular-projects/amazingbuy-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject, ViewChild } from '@angular/core';\nlet StripeComponent = class StripeComponent {\n  constructor(http, cd, data, dialogRef) {\n    this.http = http;\n    this.cd = cd;\n    this.data = data;\n    this.dialogRef = dialogRef;\n    this.token = 'tok_1JitDECi0VVZHXjGO1hkHXin';\n    this.cardHandler = this.onChange.bind(this);\n    this._totalAmount = data['totalAmount'];\n  }\n\n  ngOnDestroy() {\n    if (this.card) {\n      // We remove event listener here to keep memory clean\n      this.card.removeEventListener('change', this.cardHandler);\n      this.card.destroy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.initiateCardElement();\n  }\n\n  initiateCardElement() {\n    // Giving a base style here, but most of the style is in scss file\n    const cardStyle = {\n      base: {\n        color: '#32325d',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      }\n    };\n    this.card = elements.create('card', {\n      cardStyle\n    });\n    this.card.mount(this.cardInfo.nativeElement);\n    this.card.addEventListener('change', this.cardHandler);\n  }\n\n  onChange({\n    error\n  }) {\n    if (error) {\n      this.cardError = error.message;\n    } else {\n      this.cardError = null;\n    }\n\n    this.cd.detectChanges();\n  }\n\n  createStripeToken() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        token,\n        error\n      } = yield stripe.createToken(_this.card);\n\n      if (token) {\n        _this.onSuccess(token);\n      } else {\n        _this.onError(error);\n      }\n    })();\n  }\n\n  onSuccess(token) {\n    this.dialogRef.close({\n      token\n    });\n  }\n\n  onError(error) {\n    if (error.message) {\n      this.cardError = error.message;\n    }\n  }\n\n};\n\n__decorate([ViewChild('cardInfo')], StripeComponent.prototype, \"cardInfo\", void 0);\n\nStripeComponent = __decorate([Component({\n  selector: 'app-stripe',\n  templateUrl: './stripe.component.html',\n  styleUrls: ['./stripe.component.css']\n}), __param(2, Inject(MAT_DIALOG_DATA))], StripeComponent);\nexport { StripeComponent };","map":{"version":3,"sources":["C:\\Users\\chmic\\Desktop\\cogent\\day27\\Angular\\angular-projects\\amazingbuy-frontend\\src\\app\\stripe\\stripe.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { loadStripe } from '@stripe/stripe-js';\n\n@Component({\n  selector: 'app-stripe',\n  templateUrl: './stripe.component.html',\n  styleUrls: ['./stripe.component.css'],\n})\nexport class StripeComponent implements OnInit, OnDestroy, AfterViewInit {\n  token: string = 'tok_1JitDECi0VVZHXjGO1hkHXin';\n  number!: any;\n\n  @ViewChild('cardInfo') cardInfo: ElementRef;\n  _totalAmount: number;\n  card: any;\n  cardHandler = this.onChange.bind(this);\n  cardError: string;\n  constructor(\n    private http: HttpClient,\n    private cd: ChangeDetectorRef,\n    @Inject(MAT_DIALOG_DATA) private data: any,\n    private dialogRef: MatDialogRef<StripeComponent>\n  ) {\n    this._totalAmount = data['totalAmount'];\n  }\n  ngOnDestroy() {\n    if (this.card) {\n      // We remove event listener here to keep memory clean\n      this.card.removeEventListener('change', this.cardHandler);\n      this.card.destroy();\n    }\n  }\n  ngAfterViewInit() {\n    this.initiateCardElement();\n  }\n  initiateCardElement() {\n    // Giving a base style here, but most of the style is in scss file\n    const cardStyle = {\n      base: {\n        color: '#32325d',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a',\n      },\n    };\n    this.card = elements.create('card', { cardStyle });\n    this.card.mount(this.cardInfo.nativeElement);\n    this.card.addEventListener('change', this.cardHandler);\n  }\n  onChange({ error }) {\n    if (error) {\n      this.cardError = error.message;\n    } else {\n      this.cardError = null;\n    }\n    this.cd.detectChanges();\n  }\n  async createStripeToken() {\n    const { token, error } = await stripe.createToken(this.card);\n    if (token) {\n      this.onSuccess(token);\n    } else {\n      this.onError(error);\n    }\n  }\n  onSuccess(token) {\n    this.dialogRef.close({ token });\n  }\n  onError(error) {\n    if (error.message) {\n      this.cardError = error.message;\n    }\n  }\n\n  // chargeCreditCard() {\n  //   let form = document.getElementsByTagName('form')[0];\n  //   (<any>window).Stripe.card.createToken(\n  //     {\n  //       number: form.cardNumber.value,\n  //       exp_month: form.expMonth.value,\n  //       exp_year: form.expYear.value,\n  //       cvc: form.cvc.value,\n  //     },\n  //     (status: number, response: any) => {\n  //       if (status === 200) {\n  //         this.token = response.id;\n  //         console.log(response);\n  //         this.chargeCard();\n  //       } else {\n  //         console.log(response.error.message);\n  //       }\n  //     }\n  //   );\n  // }\n  // chargeCard() {\n  //   const headers = new HttpHeaders({ token: this.token, amount: '10' });\n  //   this.http\n  //     .post('http://localhost:8080/payment/charge', {}, { headers: headers })\n  //     .subscribe((res) => {\n  //       console.log(res);\n  //       alert(res);\n  //     });\n  // }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}